name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'
          npm-version: '10.9.0'
          
      # 获取服务端依赖（克隆并构建）
      - name: Build Server Dependency
        shell: bash
        run: |
          git clone https://x-access-token:${{ secrets.AUTH_TOKEN }}@github.com/hawkeye-xb/p-pass-file-server.git temp-server
          cd temp-server
          echo "Installing dependencies..."
          npm install --verbose
          echo "Rebuilding native modules..."
          npm rebuild --verbose
          echo "Running build script..."
          npm run build --verbose
          mkdir -p "../src/server"
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp -r dist/* "../src/server/" || xcopy "dist\*" "..\src\server\" /E /I /Y
          else
            cp -r dist/* "../src/server/"
          fi
          cd ..
          if [ "$RUNNER_OS" == "Windows" ]; then
            rm -rf temp-server || rd /s /q temp-server
          else
            rm -rf temp-server
          fi
        env:
          GIT_TERMINAL_PROMPT: 0
          CI: true
          NODE_ENV: production
      
      - name: Install Dependencies
        run: npm install
        
      - name: Build Application
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*.exe
            release/*.dmg
            release/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}